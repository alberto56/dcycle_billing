<?php

/**
 * Implements hook_install().
 * See http://dcycleproject.org/blog/43/run-all-update-hooks-install-hook
 */
function manage_deploy_install() {
  manage_deploy_update_dependencies();
  for ($i = 7001; $i < 8000; $i++) {
    $candidate = 'manage_deploy_update_' . $i;
    if (function_exists($candidate)) {
      $candidate();
    }
  }
}

/**
 * Reenable all dependencies
 */
function manage_deploy_update_dependencies() {
  static $called = FALSE;
  if (!$called) {
    $info_file = drupal_parse_info_file(drupal_get_path('module', 'manage_deploy') . '/manage_deploy.info');
    if (isset($info_file['dependencies'])) {
      module_enable($info_file['dependencies']);
    }
    if (isset($info_file['disabled'])) {
      module_disable($info_file['disabled']);
    }
    $called = TRUE;
  }
}

/**
 * Move fonts for Commerce Billy PDF generation.
 */
function manage_deploy_update_7005() {
  recurse_copy(DRUPAL_ROOT . '/sites/all/libraries/dompdf/lib/fonts', DRUPAL_ROOT . '/sites/default/files/fonts');
}

function _manage_deploy_commerce_create_product($sku, $title, $price_cents, $type) {
  if (commerce_product_validate_sku_unique($sku, NULL)) {
    $product = new stdClass;
    $product->sku = $sku;
    $product->title = $title;
    $product->type = $type;
    $product->commerce_price = array(
      LANGUAGE_NONE => array(
        array(
          'amount' => $price_cents,
          'currency_code' => 'USD',
        ),
      ),
    );
    commerce_product_save($product);
    debug($product);
  }
}

/**
 * Move fonts for Commerce Billy PDF generation.
 */
function manage_deploy_update_7007() {
  _manage_deploy_commerce_create_product('H', 'Hours of work / Heures de travail', 15000, 'product');
}

/**
 * Enable CAD, USD as currencies
 */
function manage_deploy_update_7009() {
  variable_set('commerce_enabled_currencies', drupal_map_assoc(array('USD', 'CAD')));
}

/**
 * Allow setting description on line items
 */
function manage_deploy_update_7011() {
  // See http://julian.pustkuchen.com/en/drupal-commerce-edit-form-commercelineitems-change-order-positions-after-checkout
  $instance = field_info_instance('commerce_order', 'commerce_line_items', 'commerce_order');
  $instance['widget'] = array(
    'type' => 'inline_entity_form_single',
    'module' => 'inline_entity_form',
  );
  field_update_instance($instance);
}

/**
 * Revert features and update dependencies
 */
function manage_deploy_update_7018() {
  features_revert();
  manage_deploy_update_dependencies();
}
